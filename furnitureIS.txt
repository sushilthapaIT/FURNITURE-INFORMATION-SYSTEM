/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package coursework;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.StringJoiner;
import javax.swing.JFileChooser;

/**
 *
 * @author user
 */
public class FurnitureIS extends javax.swing.JFrame {

    /**
     * Creates new form FurnitureIS
     */
    DefaultTableModel dm;
    public FurnitureIS() {
        initComponents();
        //addingDropDownComponents();       
        jPanel3.setBackground(Color.CYAN);
        jPanel2.setBackground(Color.YELLOW);
        jPanel1.setBackground(Color.orange);
        btngrp.add(jRadioButton1);
        btngrp.add(jRadioButton2);
        btngrp.add(jRadioButton3);
        btngrp.add(jRadioButton4);
        btngrp.add(jRadioButton5);
        //addFurniture.setBorder(new RoundedBorder(10));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        btngrp = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabelFurnitureIS = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        addFurniture = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        displayBtn = new javax.swing.JButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jLabelFurnitureIS1 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        popuptext = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        catagorySearch = new javax.swing.JComboBox<>();
        searchCatagoryBtn = new javax.swing.JButton();
        priceSearchbtn = new javax.swing.JButton();
        jLabelFurnitureIS3 = new javax.swing.JLabel();
        priceSearch = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        saveAsMenu = new javax.swing.JMenuItem();
        openFileMenu = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jTable1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Furniture ID", "Furniture Name", "Furniture Catagory", "Furniture Color", "Furniture Manufacturer", "Furniture Price"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabelFurnitureIS.setFont(new java.awt.Font("Times New Roman", 50, 25));
        jLabelFurnitureIS.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelFurnitureIS.setText("Furniture Details");
        jLabelFurnitureIS.setMaximumSize(new java.awt.Dimension(340, 340));
        jLabelFurnitureIS.setPreferredSize(new java.awt.Dimension(300, 300));

        jLabel1.setText("Total Furnitures in stock:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 903, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(156, 156, 156)
                .addComponent(jLabelFurnitureIS, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelFurnitureIS, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel2.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        jLabel2.setText("FurnitureID");

        jLabel3.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        jLabel3.setText("Furniture Name");

        jLabel4.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        jLabel4.setText("Furniture Color");

        jLabel5.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        jLabel5.setText("Furniture Manufacturer");

        jLabel6.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        jLabel6.setText("Furniture Price");

        jLabel7.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        jLabel7.setText("Furniture Catagory");

        jTextField6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField6KeyTyped(evt);
            }
        });

        addFurniture.setBackground(new java.awt.Color(51, 255, 204));
        addFurniture.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        addFurniture.setText("Add Furniture");
        addFurniture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFurnitureActionPerformed(evt);
            }
        });

        clearBtn.setBackground(new java.awt.Color(102, 255, 204));
        clearBtn.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        jRadioButton1.setBackground(new java.awt.Color(255, 255, 0));
        btngrp.add(jRadioButton1);
        jRadioButton1.setText("Black");

        jRadioButton2.setBackground(new java.awt.Color(255, 255, 51));
        btngrp.add(jRadioButton2);
        jRadioButton2.setText("White");

        displayBtn.setBackground(new java.awt.Color(102, 255, 204));
        displayBtn.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        displayBtn.setText("Delete Table");
        displayBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayBtnActionPerformed(evt);
            }
        });

        jRadioButton3.setBackground(new java.awt.Color(255, 255, 0));
        jRadioButton3.setText("Green");

        jRadioButton4.setBackground(new java.awt.Color(255, 255, 0));
        jRadioButton4.setText("Yellow");

        jRadioButton5.setBackground(new java.awt.Color(255, 255, 0));
        jRadioButton5.setText("Maroon");

        jLabelFurnitureIS1.setFont(new java.awt.Font("Times New Roman", 50, 25));
        jLabelFurnitureIS1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelFurnitureIS1.setText("Add Furniture Products");
        jLabelFurnitureIS1.setMaximumSize(new java.awt.Dimension(340, 340));
        jLabelFurnitureIS1.setPreferredSize(new java.awt.Dimension(300, 300));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "------Catagory------", "Sleeping", "Entertainment", "Tables", "Storage", "Sets" }));

        popuptext.setForeground(new java.awt.Color(255, 0, 51));
        popuptext.setText("*Integers Only*");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelFurnitureIS1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(popuptext, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jRadioButton2)
                                        .addGap(18, 18, 18)
                                        .addComponent(jRadioButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jRadioButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jRadioButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(addFurniture)
                                .addComponent(displayBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(clearBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jLabelFurnitureIS1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 2, Short.MAX_VALUE)
                        .addComponent(addFurniture, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox2)
                            .addComponent(jLabel7))
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addComponent(displayBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton3)
                    .addComponent(jRadioButton4)
                    .addComponent(jRadioButton5))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(popuptext, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        catagorySearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Catagory", "Sleeping", "Entertainment", "Tables", "Storage", "Sets" }));
        jPanel3.add(catagorySearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, -1, -1));

        searchCatagoryBtn.setBackground(new java.awt.Color(204, 204, 255));
        searchCatagoryBtn.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        searchCatagoryBtn.setText("Search");
        searchCatagoryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchCatagoryBtnActionPerformed(evt);
            }
        });
        jPanel3.add(searchCatagoryBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 51, 90, 40));

        priceSearchbtn.setBackground(new java.awt.Color(204, 204, 255));
        priceSearchbtn.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        priceSearchbtn.setText("Search");
        priceSearchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceSearchbtnActionPerformed(evt);
            }
        });
        jPanel3.add(priceSearchbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 51, 90, 40));

        jLabelFurnitureIS3.setBackground(new java.awt.Color(204, 255, 204));
        jLabelFurnitureIS3.setFont(new java.awt.Font("Times New Roman", 50, 25));
        jLabelFurnitureIS3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelFurnitureIS3.setText("Search Furnitures");
        jLabelFurnitureIS3.setMaximumSize(new java.awt.Dimension(340, 340));
        jLabelFurnitureIS3.setPreferredSize(new java.awt.Dimension(300, 300));
        jPanel3.add(jLabelFurnitureIS3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 900, 30));

        priceSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                priceSearchKeyReleased(evt);
            }
        });
        jPanel3.add(priceSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 60, 160, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon("C:\\Users\\user\\Documents\\NetBeansProjects\\Coursework\\src\\coursework\\furniture.jpg")); // NOI18N

        jMenu1.setText("File");

        saveAsMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        saveAsMenu.setText(" Save as");
        saveAsMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAsMenuActionPerformed(evt);
            }
        });
        jMenu1.add(saveAsMenu);

        openFileMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        openFileMenu.setText("Open");
        openFileMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileMenuActionPerformed(evt);
            }
        });
        jMenu1.add(openFileMenu);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        jMenuItem3.setText("Exit");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        jMenuItem1.setText("Open Help File");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 903, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 134, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void addFurnitureActionPerformed(java.awt.event.ActionEvent evt) {                                             
        //checkFurId();
        if(jTextField1.getText().trim().isEmpty() && jTextField2.getText().trim().isEmpty()
           && jTextField6.getText().trim().isEmpty()
           && jTextField4.getText().trim().isEmpty() && jComboBox2.getSelectedIndex()==0 
           && !jRadioButton1.isSelected()){
            JOptionPane.showMessageDialog(null, "Text Fields are empty");
        }
        else if(jTextField1.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "FurnitureId cannot be empty");
        }
        else if(jTextField2.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Furniture Name cannot be empty");
        }
        else if(jComboBox2.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(null, "Select a furniture catagory");
        }
        else if(jTextField4.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Furniture Manufacturer cannot be empty");
        }
        else if(jTextField6.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Furniture Price cannot be empty");
        }
        else if(!jRadioButton1.isSelected() && !jRadioButton2.isSelected()&&!jRadioButton3.isSelected()
                && !jRadioButton4.isSelected() && !jRadioButton5.isSelected()){
            JOptionPane.showMessageDialog(null, "Furniture Color not selected");
        }
        else{
            //JOptionPane.showMessageDialog(null, "Furniture added successfully.");
        }
        checkFurId();
    }                                            

    private void jTextField6KeyTyped(java.awt.event.KeyEvent evt) {                                     
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || ( c == KeyEvent.VK_BACK_SPACE) || c==KeyEvent.VK_DELETE)){
            evt.consume();
        }
        else{
            try{
                Integer.parseInt(jTextField6.getText());
                popuptext.setText("");
            }
            catch(NumberFormatException e){
                //JOptionPane.showMessageDialog(null, e);
            }
        }

    }                                    

    private void priceSearchbtnActionPerformed(java.awt.event.ActionEvent evt) {                                               
        FurnitureIS ob = new FurnitureIS();
        String furPrice;
        int rowCount = jTable1.getRowCount();
        System.out.println(rowCount);
        ArrayList<String> list = new ArrayList<String>();
        int rowIndex = 0;
        int colIndex = 5;
        boolean emptyTable = false;
        if(jTable1.getRowCount()==0){
            JOptionPane.showMessageDialog(null, "No data to display.");
        }
        else if(priceSearch.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please enter price to continue with the search.");
        }
        else{
            do{
                furPrice = (String) jTable1.getValueAt(rowIndex, colIndex);
                if(furPrice != null && furPrice.length() != 0){
                    list.add(furPrice);
                    rowIndex++;

                }
                else{
                    emptyTable = true;
                }
            }
            while(rowIndex<rowCount && !emptyTable);
            Collections.sort(list);
            String key = priceSearch.getText().toString();
            //System.out.println(key);
            //int keyValue = Integer.parseInt(key);
            int low = 0;
            int high = list.size() - 1;
            int searchResult = ob.value(list,low, high, key);
            //System.out.println(searchResult);
            if(searchResult!=-1){
                //JOptionPane.showMessageDialog(null, "Value found at " + searchResult);
                boolean furFound=true;
                if(furFound==true){
                    String furId = (String) jTable1.getValueAt(searchResult, 0);
                    String furName = (String) jTable1.getValueAt(searchResult, 1);
                    String furCatagory = (String) jTable1.getValueAt(searchResult, 2);
                    String furColor = (String) jTable1.getValueAt(searchResult, 3);
                    String furManufacturer = (String) jTable1.getValueAt(searchResult, 4);
                    String furniturePrice = (String) jTable1.getValueAt(searchResult, 5);
                    JOptionPane.showMessageDialog(null, "<Available furniture at this price point>" 
                    + "\nThe furniture id is: " + furId
                    +"\nThe furniture name is: " + furName
                    +"\nThe furniture catagory is: " + furCatagory
                    +"\nThe furniture manufacturer is: " + furManufacturer
                    +"\nThe furniture price is: " + furniturePrice
                    +"\nThe furniture color is: " + furColor);
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "SORRY No furniture available at this price point.");
            }
        
        }
        
    }                                              
//    private void filter(String query){
//        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>();
//        jTable1.setRowSorter(tr);
//        
//        tr.setRowFilter(RowFilter.regexFilter(query));
//    }
    private void priceSearchKeyReleased(java.awt.event.KeyEvent evt) {                                        
//        String query = priceSearch.getText().toLowerCase();
//        filter(query);
    }                                       

    private void searchCatagoryBtnActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        if (catagorySearch.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(null, "Please select a catagory");
        }
        
        else if(jTable1.getRowCount()==0){
            JOptionPane.showMessageDialog(null, "No data to display.");
        }
        catagoryCount();
        boolean found = true;
        for(int row=0; row<jTable1.getRowCount(); row++){
            
            //System.out.println(catagoryName);
            //String searchCatagory = catagorySearch.getSelectedItem().toString();
            for(int column=0; column<jTable1.getColumnCount(); column++){
                
                //String catagoryName = jTable1.getModel().getValueAt(row, column).toString();
                if(jTable1.getModel().getValueAt(row, column).equals("Tables")){
                    if(catagorySearch.getSelectedItem().toString().equals("Tables")){
                         System.out.println(jTable1.getModel().getValueAt(row, column).toString());
                         String furnitureId = jTable1.getModel().getValueAt(row, 0).toString();
                         String furnitureName = jTable1.getModel().getValueAt(row, 1).toString();
                         String furnitureColor = jTable1.getModel().getValueAt(row, 3).toString();
                         JOptionPane.showMessageDialog(null, "Table Results"+ 
                         "\nThe furniture Id of this catagory is " + furnitureId
                         + "\nThe name of the furniture available in this catagory is " + furnitureName
                         + "\nThe color of the furniture available in this catagory is " + furnitureColor);
                         
                         break;
                    }
                    else{
                        continue;
                    }  
                }
                else if(jTable1.getModel().getValueAt(row, column).equals("Entertainment")){
                    if(catagorySearch.getSelectedItem().toString().equals("Entertainment")){
                         System.out.println(jTable1.getModel().getValueAt(row, column).toString());
                         String furnitureId = jTable1.getModel().getValueAt(row, 0).toString();
                         String furnitureName = jTable1.getModel().getValueAt(row, 1).toString();
                         String furnitureColor = jTable1.getModel().getValueAt(row, 4).toString();
                         JOptionPane.showMessageDialog(null, "Entertaiment Result"+ 
                         "\nThe furniture Id of this catagory is " + furnitureId
                         + "\nThe name of the furniture available in this catagory is " + furnitureName
                         + "\nThe color of the furniture available in this catagory is " + furnitureColor);
                         
                         break;
                    }
                    else{
                        continue;
                    }  
                }
                else if(jTable1.getModel().getValueAt(row, column).equals("Sets")){
                    if(catagorySearch.getSelectedItem().toString().equals("Sets")){
                         System.out.println(jTable1.getModel().getValueAt(row, column).toString());
                         String furnitureId = jTable1.getModel().getValueAt(row, 0).toString();
                         String furnitureName = jTable1.getModel().getValueAt(row, 1).toString();
                         String furnitureColor = jTable1.getModel().getValueAt(row, 4).toString();
                         JOptionPane.showMessageDialog(null, "Sets Result"+ 
                         "\nThe furniture Id of this catagory is " + furnitureId
                         + "\nThe name of the furniture available in this catagory is " + furnitureName
                         + "\nThe color of the furniture available in this catagory is " + furnitureColor);
                         
                         break;
                    }
                    else{
                        continue;
                    }  
                }
                else if(jTable1.getModel().getValueAt(row, column).equals("Sleeping")){
                    
                    if(catagorySearch.getSelectedItem().toString().equals("Sleeping")){
                         System.out.println(jTable1.getModel().getValueAt(row, column).toString());
                         String furnitureId = jTable1.getModel().getValueAt(row, 0).toString();
                         String furnitureName = jTable1.getModel().getValueAt(row, 1).toString();
                         String furnitureColor = jTable1.getModel().getValueAt(row, 4).toString();
                         JOptionPane.showMessageDialog(null, "Sleeping Result"+ 
                         "\nThe furniture Id of this catagory is " + furnitureId
                         + "\nThe name of the furniture available in this catagory is " + furnitureName
                         + "\nThe color of the furniture available in this catagory is " + furnitureColor);
                         
                         break;
                    }
                    else{
                        continue;
                    }  
                }
                else if(jTable1.getModel().getValueAt(row, column).equals("Storage")){
                    
                    if(catagorySearch.getSelectedItem().toString().equals("Storage")){
                         System.out.println(jTable1.getModel().getValueAt(row, column).toString());
                         String furnitureId = jTable1.getModel().getValueAt(row, 0).toString();
                         String furnitureName = jTable1.getModel().getValueAt(row, 1).toString();
                         String furnitureColor = jTable1.getModel().getValueAt(row, 4).toString();
                         JOptionPane.showMessageDialog(null, "Storage Result"+ 
                         "\nThe furniture Id of this catagory is " + furnitureId
                         + "\nThe name of the furniture available in this catagory is " + furnitureName
                         + "\nThe color of the furniture available in this catagory is " + furnitureColor);
                         
                         break;
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "<Furniture not Found>");
                        continue;
                    }  
                }
            }
        }
        
    }                                                 

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {                                         
        jTextField1.setText("");
        jTextField2.setText("");
        jComboBox2.setSelectedIndex(0);
        btngrp.clearSelection();
        jTextField4.setText("");
        jTextField6.setText("");
    }                                        

    private void openFileMenuActionPerformed(java.awt.event.ActionEvent evt) {                                             
        
             addInputFromText();  
             increaseCount();

    }                                            
void addInputFromText() { 
        String currentDirectoryPath = "C:\\DataExcel";
        JFileChooser FileChooser = new JFileChooser(currentDirectoryPath);
        int Chooser = FileChooser.showOpenDialog(null);
        if (Chooser == JFileChooser.APPROVE_OPTION){
            //String filePath = "";
            //File file = new File(filePath);
              File selectedFile = FileChooser.getSelectedFile();
            try {
                BufferedReader br = new BufferedReader(new FileReader(selectedFile));
                // get the first line
                // get the columns name from the first line
                // set columns name to the jtable model
                String firstLine = br.readLine().trim();
                String[] columnsName = firstLine.split(",");
                DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
                model.setColumnIdentifiers(columnsName);

                // get lines from txt file
                Object[] tableLines = br.lines().toArray();

                // extratct data from lines
                // set data to jtable model
                for(int i = 0; i < tableLines.length; i++)
                {
                    String line = tableLines[i].toString().trim();
                    String[] dataRow = line.split(",");
                    model.addRow(dataRow);
                }


            } catch (Exception ex) {
                //Logger.getLogger(TextFileDataToJTable.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "<File Not Found>");
            }
        }
}
    
        private void addRowsinTable(){
        if(jRadioButton1.isSelected()&& !jTextField1.getText().trim().isEmpty() && !jTextField2.getText().trim().isEmpty()
           && !jTextField6.getText().trim().isEmpty()
           && !jTextField4.getText().trim().isEmpty() && jComboBox2.getSelectedIndex()!=0){
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        model.addRow(new Object[]{jTextField1.getText(),jTextField2.getText(),
                                  jComboBox2.getSelectedItem().toString(),jRadioButton1.getText(),
                                  jTextField4.getText(),jTextField6.getText()});
        JOptionPane.showMessageDialog(null, "Furniture added successfully.");
        }
        else if(jRadioButton2.isSelected() && !jTextField1.getText().trim().isEmpty() && !jTextField2.getText().trim().isEmpty()
           && !jTextField6.getText().trim().isEmpty()
           && !jTextField4.getText().trim().isEmpty() && jComboBox2.getSelectedIndex()!=0){
            DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        model.addRow(new Object[]{jTextField1.getText(),jTextField2.getText(),
                                  jComboBox2.getSelectedItem().toString(),jRadioButton2.getText(),
                                  jTextField4.getText(),jTextField6.getText()});
        JOptionPane.showMessageDialog(null, "Furniture added successfully.");
        }
        else if(jRadioButton3.isSelected() && !jTextField1.getText().trim().isEmpty() && !jTextField2.getText().trim().isEmpty()
           && !jTextField6.getText().trim().isEmpty()
           && !jTextField4.getText().trim().isEmpty() && jComboBox2.getSelectedIndex()!=0){
            DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        model.addRow(new Object[]{jTextField1.getText(),jTextField2.getText(),
                                  jComboBox2.getSelectedItem().toString(),jRadioButton3.getText(),
                                  jTextField4.getText(),jTextField6.getText()});
        JOptionPane.showMessageDialog(null, "Furniture added successfully.");
        }
        else if(jRadioButton4.isSelected() && !jTextField1.getText().trim().isEmpty() && !jTextField2.getText().trim().isEmpty()
           && !jTextField6.getText().trim().isEmpty()
           && !jTextField4.getText().trim().isEmpty() && jComboBox2.getSelectedIndex()!=0){
            DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        model.addRow(new Object[]{jTextField1.getText(),jTextField2.getText(),
                                  jComboBox2.getSelectedItem().toString(),jRadioButton4.getText(),
                                  jTextField4.getText(),jTextField6.getText()});
        JOptionPane.showMessageDialog(null, "Furniture added successfully.");
        }
        else if(jRadioButton5.isSelected() && !jTextField1.getText().trim().isEmpty() && !jTextField2.getText().trim().isEmpty()
           && !jTextField6.getText().trim().isEmpty()
           && !jTextField4.getText().trim().isEmpty() && jComboBox2.getSelectedIndex()!=0){
            DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        model.addRow(new Object[]{jTextField1.getText(),jTextField2.getText(),
                                  jComboBox2.getSelectedItem().toString(),jRadioButton5.getText(),
                                  jTextField4.getText(),jTextField6.getText()});
        JOptionPane.showMessageDialog(null, "Furniture added successfully.");
        }
        increaseCount();
        //System.out.println(jTable1.getValueAt(0, 0).toString());
    }
    
    private void checkFurId(){
        // this method checks the furniture id and if the furniture id matches with other than display suitable message
        boolean found = false;
        String check = jTextField1.getText().toString();
        for(int i=0; i<jTable1.getRowCount(); i++){
                String val=jTable1.getValueAt(i, 0).toString();
                if(check.equals(val)){
                found = true;
            }
        }
        if(found==true){
                JOptionPane.showMessageDialog(null, "Furniture Id already present");
        }
        else{
                addRowsinTable();
            }
        
    }
    private void increaseCount(){
        int count = jTable1.getRowCount();
        String changeCount = String.valueOf(count);
        jLabel9.setText(changeCount);
        
    }
    private void catagoryCount(){
        int count = 0;
        for(int row = 0; row<jTable1.getRowCount(); row++){
            String checkFurCat = jTable1.getValueAt(row, 2).toString();
            String selectedCatagory = catagorySearch.getSelectedItem().toString();
            if(selectedCatagory.equals(checkFurCat)){
                count = count + 1;
            }
        }
        JOptionPane.showMessageDialog(null, "There are " + count + " furnitures avaiable in this catagory.");
    
    }
    private void saveAsMenuActionPerformed(java.awt.event.ActionEvent evt) {                                           

          try (BufferedWriter bw = new BufferedWriter(new FileWriter(new File("C:\\DataExcel\\Test.txt")))) {
            StringJoiner joiner = new StringJoiner(",");
            for (int col = 0; col < jTable1.getColumnCount(); col++) {
                joiner.add(jTable1.getColumnName(col));
            }
            System.out.println(joiner.toString());
            bw.write(joiner.toString());
            bw.newLine();
            for (int row = 0; row < jTable1.getRowCount(); row++) {
                joiner = new StringJoiner(",");
                for (int col = 0; col < jTable1.getColumnCount(); col++) {
                    Object obj = jTable1.getValueAt(row, col);
                    String value = obj == null ? "null" : obj.toString();
                    joiner.add(value);
                }
                System.out.println(joiner.toString());
                bw.write(joiner.toString());
                bw.newLine();
            }
            JOptionPane.showMessageDialog(null, "Exported as txt successfully.");
        } catch (IOException exp) {
            exp.printStackTrace();
        }
    }                                          

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        System.exit(0);
    }                                          

    private void displayBtnActionPerformed(java.awt.event.ActionEvent evt) {                                           
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
    }                                          

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
                     File file=new File("C:\\DataExcel\\helpFile.pdf");
        try {
            Desktop.getDesktop().open(file);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "File not found");
        }
    }                                          

    public static int value(ArrayList<String> list,int low, int high, String key){
            
            //System.out.println(high);
            while(low<=high){
                int mid = (low + high)/2;
                if(list.get(mid).equals(key)){
                    return mid;
                }
                else if(key.compareTo(list.get(mid))<0){
                    return value(list, low, mid-1, key);
                }
                else{
                    return value(list, mid+1, high, key);
                }
            }
            return -1;
    }    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(FurnitureIS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(FurnitureIS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(FurnitureIS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(FurnitureIS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FurnitureIS().setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify                     
    private javax.swing.JButton addFurniture;
    private javax.swing.ButtonGroup btngrp;
    private javax.swing.JComboBox<String> catagorySearch;
    private javax.swing.JButton clearBtn;
    private javax.swing.JButton displayBtn;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelFurnitureIS;
    private javax.swing.JLabel jLabelFurnitureIS1;
    private javax.swing.JLabel jLabelFurnitureIS3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JMenuItem openFileMenu;
    private javax.swing.JLabel popuptext;
    private javax.swing.JTextField priceSearch;
    private javax.swing.JButton priceSearchbtn;
    private javax.swing.JMenuItem saveAsMenu;
    private javax.swing.JButton searchCatagoryBtn;
    // End of variables declaration                   
}
